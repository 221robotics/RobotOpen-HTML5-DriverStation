var gamepadSupport={TYPICAL_BUTTON_COUNT:16,TYPICAL_AXIS_COUNT:4,ticking:false,gamepads:[],prevRawGamepadTypes:[],prevTimestamps:[],init:function(){var a=!!navigator.webkitGetGamepads||!!navigator.webkitGamepads||navigator.userAgent.indexOf("Firefox/")!=-1;if(!a){tester.showNotSupported()}else{window.addEventListener("MozGamepadConnected",gamepadSupport.onGamepadConnect,false);window.addEventListener("MozGamepadDisconnected",gamepadSupport.onGamepadDisconnect,false);if(!!navigator.webkitGamepads||!!navigator.webkitGetGamepads){gamepadSupport.startPolling()}}},onGamepadConnect:function(a){gamepadSupport.gamepads.push(a.gamepad);tester.updateGamepads(gamepadSupport.gamepads);gamepadSupport.startPolling()},onGamepadDisconnect:function(a){for(var b in gamepadSupport.gamepads){if(gamepadSupport.gamepads[b].index==a.gamepad.index){gamepadSupport.gamepads.splice(b,1);break}}if(gamepadSupport.gamepads.length==0){gamepadSupport.stopPolling()}tester.updateGamepads(gamepadSupport.gamepads)},startPolling:function(){if(!gamepadSupport.ticking){gamepadSupport.ticking=true;gamepadSupport.tick()}},stopPolling:function(){gamepadSupport.ticking=false},tick:function(){gamepadSupport.pollStatus();gamepadSupport.scheduleNextTick()},scheduleNextTick:function(){if(gamepadSupport.ticking){if(window.requestAnimationFrame){window.requestAnimationFrame(gamepadSupport.tick)}else if(window.mozRequestAnimationFrame){window.mozRequestAnimationFrame(gamepadSupport.tick)}else if(window.webkitRequestAnimationFrame){window.webkitRequestAnimationFrame(gamepadSupport.tick)}}},pollStatus:function(){gamepadSupport.pollGamepads();for(var a in gamepadSupport.gamepads){var b=gamepadSupport.gamepads[a];if(b.timestamp&&b.timestamp==gamepadSupport.prevTimestamps[a]){continue}gamepadSupport.prevTimestamps[a]=b.timestamp;gamepadSupport.updateDisplay(a)}},pollGamepads:function(){var a=navigator.webkitGetGamepads&&navigator.webkitGetGamepads()||navigator.webkitGamepads;if(a){gamepadSupport.gamepads=[];var b=false;for(var c=0;c<a.length;c++){if(typeof a[c]!=gamepadSupport.prevRawGamepadTypes[c]){b=true;gamepadSupport.prevRawGamepadTypes[c]=typeof a[c]}if(a[c]){gamepadSupport.gamepads.push(a[c])}}if(b){tester.updateGamepads(gamepadSupport.gamepads)}}},updateDisplay:function(a){var b=gamepadSupport.gamepads[a];tester.updateButton(b.buttons[0],a,"button-1");tester.updateButton(b.buttons[1],a,"button-2");tester.updateButton(b.buttons[2],a,"button-3");tester.updateButton(b.buttons[3],a,"button-4");tester.updateButton(b.buttons[4],a,"button-left-shoulder-top");tester.updateButton(b.buttons[6],a,"button-left-shoulder-bottom");tester.updateButton(b.buttons[5],a,"button-right-shoulder-top");tester.updateButton(b.buttons[7],a,"button-right-shoulder-bottom");tester.updateButton(b.buttons[8],a,"button-select");tester.updateButton(b.buttons[9],a,"button-start");tester.updateButton(b.buttons[10],a,"stick-1");tester.updateButton(b.buttons[11],a,"stick-2");tester.updateButton(b.buttons[12],a,"button-dpad-top");tester.updateButton(b.buttons[13],a,"button-dpad-bottom");tester.updateButton(b.buttons[14],a,"button-dpad-left");tester.updateButton(b.buttons[15],a,"button-dpad-right");tester.updateAxis(b.axes[0],a,"stick-1-axis-x","stick-1",true);tester.updateAxis(b.axes[1],a,"stick-1-axis-y","stick-1",false);tester.updateAxis(b.axes[2],a,"stick-2-axis-x","stick-2",true);tester.updateAxis(b.axes[3],a,"stick-2-axis-y","stick-2",false);var c=gamepadSupport.TYPICAL_BUTTON_COUNT;while(typeof b.buttons[c]!="undefined"){tester.updateButton(b.buttons[c],a,"extra-button-"+c);c++}var d=gamepadSupport.TYPICAL_AXIS_COUNT;while(typeof b.axes[d]!="undefined"){tester.updateAxis(b.axes[d],a,"extra-axis-"+d);d++}}}